// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package contract

import (
	"strings"

	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
)

// InHospitalDataABI is the input ABI used to generate the binding from.
const InHospitalDataABI = "[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":true,\"inputs\":[{\"name\":\"_personid\",\"type\":\"string\"}],\"name\":\"getDataByPersonId\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_personid\",\"type\":\"string\"},{\"name\":\"_date\",\"type\":\"string\"}],\"name\":\"getDataByPersonidAndDate\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_key\",\"type\":\"string\"},{\"name\":\"_timestamp\",\"type\":\"string\"},{\"name\":\"_hospitalid\",\"type\":\"string\"},{\"name\":\"_devid\",\"type\":\"string\"},{\"name\":\"_personid\",\"type\":\"string\"},{\"name\":\"_personveindata\",\"type\":\"string\"},{\"name\":\"_personpicdata\",\"type\":\"string\"},{\"name\":\"_additionalinfo\",\"type\":\"string\"}],\"name\":\"putData\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]"

// InHospitalData is an auto generated Go binding around an Ethereum contract.
type InHospitalData struct {
	InHospitalDataCaller     // Read-only binding to the contract
	InHospitalDataTransactor // Write-only binding to the contract
	InHospitalDataFilterer   // Log filterer for contract events
}

// InHospitalDataCaller is an auto generated read-only Go binding around an Ethereum contract.
type InHospitalDataCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// InHospitalDataTransactor is an auto generated write-only Go binding around an Ethereum contract.
type InHospitalDataTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// InHospitalDataFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type InHospitalDataFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// InHospitalDataSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type InHospitalDataSession struct {
	Contract     *InHospitalData   // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// InHospitalDataCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type InHospitalDataCallerSession struct {
	Contract *InHospitalDataCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts         // Call options to use throughout this session
}

// InHospitalDataTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type InHospitalDataTransactorSession struct {
	Contract     *InHospitalDataTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts         // Transaction auth options to use throughout this session
}

// InHospitalDataRaw is an auto generated low-level Go binding around an Ethereum contract.
type InHospitalDataRaw struct {
	Contract *InHospitalData // Generic contract binding to access the raw methods on
}

// InHospitalDataCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type InHospitalDataCallerRaw struct {
	Contract *InHospitalDataCaller // Generic read-only contract binding to access the raw methods on
}

// InHospitalDataTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type InHospitalDataTransactorRaw struct {
	Contract *InHospitalDataTransactor // Generic write-only contract binding to access the raw methods on
}

// NewInHospitalData creates a new instance of InHospitalData, bound to a specific deployed contract.
func NewInHospitalData(address common.Address, backend bind.ContractBackend) (*InHospitalData, error) {
	contract, err := bindInHospitalData(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &InHospitalData{InHospitalDataCaller: InHospitalDataCaller{contract: contract}, InHospitalDataTransactor: InHospitalDataTransactor{contract: contract}, InHospitalDataFilterer: InHospitalDataFilterer{contract: contract}}, nil
}

// NewInHospitalDataCaller creates a new read-only instance of InHospitalData, bound to a specific deployed contract.
func NewInHospitalDataCaller(address common.Address, caller bind.ContractCaller) (*InHospitalDataCaller, error) {
	contract, err := bindInHospitalData(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &InHospitalDataCaller{contract: contract}, nil
}

// NewInHospitalDataTransactor creates a new write-only instance of InHospitalData, bound to a specific deployed contract.
func NewInHospitalDataTransactor(address common.Address, transactor bind.ContractTransactor) (*InHospitalDataTransactor, error) {
	contract, err := bindInHospitalData(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &InHospitalDataTransactor{contract: contract}, nil
}

// NewInHospitalDataFilterer creates a new log filterer instance of InHospitalData, bound to a specific deployed contract.
func NewInHospitalDataFilterer(address common.Address, filterer bind.ContractFilterer) (*InHospitalDataFilterer, error) {
	contract, err := bindInHospitalData(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &InHospitalDataFilterer{contract: contract}, nil
}

// bindInHospitalData binds a generic wrapper to an already deployed contract.
func bindInHospitalData(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(InHospitalDataABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_InHospitalData *InHospitalDataRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _InHospitalData.Contract.InHospitalDataCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_InHospitalData *InHospitalDataRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _InHospitalData.Contract.InHospitalDataTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_InHospitalData *InHospitalDataRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _InHospitalData.Contract.InHospitalDataTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_InHospitalData *InHospitalDataCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _InHospitalData.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_InHospitalData *InHospitalDataTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _InHospitalData.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_InHospitalData *InHospitalDataTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _InHospitalData.Contract.contract.Transact(opts, method, params...)
}

// GetDataByPersonId is a free data retrieval call binding the contract method 0xd7e3724a.
//
// Solidity: function getDataByPersonId(_personid string) constant returns(string)
func (_InHospitalData *InHospitalDataCaller) GetDataByPersonId(opts *bind.CallOpts, _personid string) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _InHospitalData.contract.Call(opts, out, "getDataByPersonId", _personid)
	return *ret0, err
}

// GetDataByPersonId is a free data retrieval call binding the contract method 0xd7e3724a.
//
// Solidity: function getDataByPersonId(_personid string) constant returns(string)
func (_InHospitalData *InHospitalDataSession) GetDataByPersonId(_personid string) (string, error) {
	return _InHospitalData.Contract.GetDataByPersonId(&_InHospitalData.CallOpts, _personid)
}

// GetDataByPersonId is a free data retrieval call binding the contract method 0xd7e3724a.
//
// Solidity: function getDataByPersonId(_personid string) constant returns(string)
func (_InHospitalData *InHospitalDataCallerSession) GetDataByPersonId(_personid string) (string, error) {
	return _InHospitalData.Contract.GetDataByPersonId(&_InHospitalData.CallOpts, _personid)
}

// GetDataByPersonidAndDate is a free data retrieval call binding the contract method 0x30a42947.
//
// Solidity: function getDataByPersonidAndDate(_personid string, _date string) constant returns(string)
func (_InHospitalData *InHospitalDataCaller) GetDataByPersonidAndDate(opts *bind.CallOpts, _personid string, _date string) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _InHospitalData.contract.Call(opts, out, "getDataByPersonidAndDate", _personid, _date)
	return *ret0, err
}

// GetDataByPersonidAndDate is a free data retrieval call binding the contract method 0x30a42947.
//
// Solidity: function getDataByPersonidAndDate(_personid string, _date string) constant returns(string)
func (_InHospitalData *InHospitalDataSession) GetDataByPersonidAndDate(_personid string, _date string) (string, error) {
	return _InHospitalData.Contract.GetDataByPersonidAndDate(&_InHospitalData.CallOpts, _personid, _date)
}

// GetDataByPersonidAndDate is a free data retrieval call binding the contract method 0x30a42947.
//
// Solidity: function getDataByPersonidAndDate(_personid string, _date string) constant returns(string)
func (_InHospitalData *InHospitalDataCallerSession) GetDataByPersonidAndDate(_personid string, _date string) (string, error) {
	return _InHospitalData.Contract.GetDataByPersonidAndDate(&_InHospitalData.CallOpts, _personid, _date)
}

// PutData is a paid mutator transaction binding the contract method 0x96541295.
//
// Solidity: function putData(_key string, _timestamp string, _hospitalid string, _devid string, _personid string, _personveindata string, _personpicdata string, _additionalinfo string) returns()
func (_InHospitalData *InHospitalDataTransactor) PutData(opts *bind.TransactOpts, _key string, _timestamp string, _hospitalid string, _devid string, _personid string, _personveindata string, _personpicdata string, _additionalinfo string) (*types.Transaction, error) {
	return _InHospitalData.contract.Transact(opts, "putData", _key, _timestamp, _hospitalid, _devid, _personid, _personveindata, _personpicdata, _additionalinfo)
}

// PutData is a paid mutator transaction binding the contract method 0x96541295.
//
// Solidity: function putData(_key string, _timestamp string, _hospitalid string, _devid string, _personid string, _personveindata string, _personpicdata string, _additionalinfo string) returns()
func (_InHospitalData *InHospitalDataSession) PutData(_key string, _timestamp string, _hospitalid string, _devid string, _personid string, _personveindata string, _personpicdata string, _additionalinfo string) (*types.Transaction, error) {
	return _InHospitalData.Contract.PutData(&_InHospitalData.TransactOpts, _key, _timestamp, _hospitalid, _devid, _personid, _personveindata, _personpicdata, _additionalinfo)
}

// PutData is a paid mutator transaction binding the contract method 0x96541295.
//
// Solidity: function putData(_key string, _timestamp string, _hospitalid string, _devid string, _personid string, _personveindata string, _personpicdata string, _additionalinfo string) returns()
func (_InHospitalData *InHospitalDataTransactorSession) PutData(_key string, _timestamp string, _hospitalid string, _devid string, _personid string, _personveindata string, _personpicdata string, _additionalinfo string) (*types.Transaction, error) {
	return _InHospitalData.Contract.PutData(&_InHospitalData.TransactOpts, _key, _timestamp, _hospitalid, _devid, _personid, _personveindata, _personpicdata, _additionalinfo)
}
